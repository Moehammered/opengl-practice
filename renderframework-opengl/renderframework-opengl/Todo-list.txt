Transformations
	Translation, rotation, scale

	quaternions
		http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-17-quaternions/
		to read: 
			https://github.com/fehaar/FFWD/blob/master/Framework/PressPlay.FFWD/Quaternion.cs
			https://github.com/Moehammered/MonogameLearning/blob/master/Pathfinding/Pathfinding/BaseComponents/Transform.cs

Transform component made
	Can rotate, but needs tests to see what is bugged/misoriented
	position is fine
	needs functions to automatically return its mat4 representations
				OR
	create a helper header that will have functions to automatically get the required mat4
	(probably better... maybe)

Camera component made
	can create a view and projection matrix
	moves around with a transform
	can be updated


Next
	Make an fps demo to test transforms
		-started basic movement
		-needs rotation ------------------
			-rotation is inverted, mainly orientation vectors are
	begin entity component design
	create primitive shape types
		-cube (done but UVs are screwed for top and bottom face)
			should make individual points for the cube since each face has it's own UVs
		-sphere
			http://www.songho.ca/opengl/gl_sphere.html#icosphere
		-cylinder